name: Build Firmware CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-mgmt:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git gcc-arm-none-eabi binutils-arm-none-eabi libnewlib-arm-none-eabi libstdc++-arm-none-eabi-newlib stlink-tools python3 pip
        pip install pyserial

    - name: Build
      working-directory: ./firmware/mgmt
      shell: bash
      run: make -j compile

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mgmt
        path: |
          firmware/mgmt/build/mgmt.bin
          firmware/mgmt/build/mgmt.elf
          firmware/mgmt/build/mgmt.hex

    - name: Nightly mgmt release
      if: github.ref_name == 'main'
      uses: ncipollo/release-action@v1
      with:
        tag: nightly
        name: "Nightly Build"
        allowUpdates: true
        replacesArtifacts: true
        artifacts: firmware/mgmt/build/mgmt.bin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Copy nightly mgmt binary to github pages
      # if: github.ref_name == 'main'
      steps:
        - name: Checkout gh-pages branch
          uses: actions/checkout@v4
          with:
            ref: gh-pages
            persist-credentials: false
        - name: Download mgmt bin
          run: |
            mkdir -p build/mgmt
            gh release download nightly -p 'mgmt.bin' -D build/mgmt
          env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        - name: Commit and push mgmt binary
          run: |
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add build
            git commit -m "Update mgmt binary from Nightly build" || echo "No changes to commit"
            git push origin gh-pages

  build-net:
    runs-on: ubuntu-latest
    continue-on-error: true
    container:
      image: espressif/idf:v5.4
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Dependencies
      run: |
        apt-get update
        apt-get install -y make git curl unzip cmake bash pkg-config

    - name: Build
      working-directory: ./firmware/net
      shell: bash
      run: |
        . $IDF_PATH/export.sh
        make -j compile

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: net
        path: |
          firmware/net/build/bootloader/bootloader.bin
          firmware/net/build/partition_table/partition-table.bin
          firmware/net/build/net.bin
          firmware/net/build/net.elf

    - name: Upload net binary
      if: github.ref_name == 'main'
      uses: ncipollo/release-action@v1
      with:
        tag: nightly
        name: "Nightly Build"
        allowUpdates: true
        replacesArtifacts: true
        artifacts: |
          firmware/net/build/bootloader/bootloader.bin
          firmware/net/build/partition_table/partition-table.bin
          firmware/net/build/net.bin
          firmware/net/build/net.elf
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Copy nightly net binaries to github pages
    #   # if: github.ref_name == 'main'
    #   steps:
    #     - name: Checkout gh-pages branch
    #       uses: actions/checkout@v4
    #       with:
    #         ref: gh-pages
    #         persist-credentials: false
    #     - name: Download net binaries
    #       run: |
    #         mkdir -p build/net
    #         gh release download nightly -p 'net.bin' -D build/net
    #         gh release download nightly -p 'partition-table.bin' -D build/net
    #         gh release download nightly -p 'bootloader.bin' -D build/net
    #       env:
    #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     - name: Commit and push net binaries
    #       run: |
    #         git config user.name "github-actions[bot]"
    #         git config user.email "github-actions[bot]@users.noreply.github.com"
    #         git add build
    #         git commit -m "Update net binaries from Nightly build" || echo "No changes to commit"
    #         git push origin gh-pages

  build-ui:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git gcc-arm-none-eabi binutils-arm-none-eabi libnewlib-arm-none-eabi libstdc++-arm-none-eabi-newlib stlink-tools python3 pip
        pip install pyserial

    - name: Build
      working-directory: ./firmware/ui
      shell: bash
      run: make -j compile

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ui
        path: |
          firmware/ui/build/ui.bin
          firmware/ui/build/ui.elf
          firmware/ui/build/ui.hex

    - name: Upload ui binary
      if: github.ref_name == 'main'
      uses: ncipollo/release-action@v1
      with:
        tag: nightly
        name: "Nightly Build"
        allowUpdates: true
        replacesArtifacts: true
        artifacts: firmware/ui/build/ui.bin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Copy nightly ui binary to github pages
    #   # if: github.ref_name == 'main'
    #   steps:
    #     - name: Checkout gh-pages branch
    #       uses: actions/checkout@v4
    #       with:
    #         ref: gh-pages
    #         persist-credentials: false
    #     - name: Download ui bin
    #       run: |
    #         mkdir -p build/ui
    #         gh release download nightly -p 'ui.bin' -D build/ui
    #       env:
    #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     - name: Commit and push ui binary
    #       run: |
    #         git config user.name "github-actions[bot]"
    #         git config user.email "github-actions[bot]@users.noreply.github.com"
    #         git add build
    #         git commit -m "Update ui binary from Nightly build" || echo "No changes to commit"
    #         git push origin gh-pages
